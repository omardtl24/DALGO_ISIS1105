package uniandes.algorithms.graphs;

import java.util.Arrays;

/**
 * Inner class representing an edge using an array of two integers.
 * This class is useful for identifying edges in graph algorithms 
 * when using maps or other data structures.
 */
public class EdgeArray {
    // Edge represented as a pair of integers (nodes)
    private final int[] key;

    /**
     * Constructor for the EdgeArray class.
     * Ensures that the edge array contains exactly two elements (representing two nodes).
     *
     * @param key Array representing the edge (two nodes).
     * @throws Exception if the array length is not exactly 2.
     */
    public EdgeArray(int[] key) throws Exception {
        if (key.length != 2) throw new Exception("Invalid edge: must contain exactly two nodes.");
        this.key = key;
    }

    /**
     * Retrieves the array representing the edge (two nodes).
     *
     * @return An array of two integers representing the edge.
     */
    public int[] getEdge() {
        return key;
    }

    /**
     * Compares this EdgeArray object with another object for equality.
     * Two EdgeArray objects are considered equal if they represent the same node pair.
     * 
     * @param obj The object to compare with.
     * @return True if the objects represent the same edge (node pair), false otherwise.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true; // Check if it's the same object reference
        if (!(obj instanceof EdgeArray)) return false; // Check if the object is an instance of EdgeArray
        EdgeArray other = (EdgeArray) obj; // Cast the object to EdgeArray

        // Check if both arrays contain the same values (i.e., represent the same edge)
        return Arrays.equals(this.key, other.key);
    }

    /**
     * Generates a hash code for the EdgeArray.
     * This is useful when storing the edge in hash-based collections like HashMap or HashSet.
     * 
     * @return An integer hash code based on the edge array.
     */
    @Override
    public int hashCode() {
        return Arrays.hashCode(key); // Use the hash code generated by the array's content
    }
}
